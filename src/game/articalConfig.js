const ArticalConfig ={'artical100':"如果有人不知道 取值范围 -3.402823E+38-3.402823E+38 其中的E+38的含义我这里解释一下-3.402823E+38 等价于 -3.402823*10^38（10的38次方）取值范围-3.402823E+38 – 3.402823E+38 也就等价于-340282300000000000000000000000000000000 至 340282300000000000000000000000000000000看到这里大家应该心里有点明白了吧？float的最大值340282300000000000000000000000000000000完全秒杀int的最大值4294967295在回到文章开头的代码，float占4字节int也占4字节 ，此刻你的内心是否有个疑问？为什么差这么多？首先咱先看看int 4字节 （1个字节8位，4字节就是32位）也就表示它由32位保存 也就是它的最大值是 2^32（2的32次方）=4294967296（大家可以拿起计算器算一下是不是这个值）同样的float 4字节 也表示它由32位保存那么凭什么它能存3.402823E+38这么大的数呢？机器不会骗人，原因就是它不是按int这么存数据的。比如一个float 数据1024.1024 等价于 1.0241024 * 10^3  （3表示指数，1.0241024表示有效数字）float其实只是把符号、指数、有效数字3部分保存，真正在运算的时候是根据指数在移位操作。float把 32位分成了3部分，1位（符号位）8位（指数位）23位（有效数字）那么 1+ 8 + 23 等于32吧，所以float的32位是这么来的。23位有效数字就表示float真正能存的精度，23位小数部分是反被储存的部分，所以它是有24位存储的，2^24（2的24次方）=16777216 ，请大家记住这个数值，下面我们在做个试验",
'artical101':"如果有人不知道 取值范围 -3.402823E+38-3.402823E+38 其中的E+38的含义我这里解释一下-3.402823E+38 等价于 -3.402823*10^38（10的38次方）取值范围-3.402823E+38 – 3.402823E+38 也就等价于-340282300000000000000000000000000000000 至 340282300000000000000000000000000000000看到这里大家应该心里有点明白了吧？float的最大值340282300000000000000000000000000000000完全秒杀int的最大值4294967295在回到文章开头的代码，float占4字节int也占4字节 ，此刻你的内心是否有个疑问？为什么差这么多？首先咱先看看int 4字节 （1个字节8位，4字节就是32位）也就表示它由32位保存 也就是它的最大值是 2^32（2的32次方）=4294967296（大家可以拿起计算器算一下是不是这个值）同样的float 4字节 也表示它由32位保存那么凭什么它能存3.402823E+38这么大的数呢？机器不会骗人，原因就是它不是按int这么存数据的。比如一个float 数据1024.1024 等价于 1.0241024 * 10^3  （3表示指数，1.0241024表示有效数字）float其实只是把符号、指数、有效数字3部分保存，真正在运算的时候是根据指数在移位操作。float把 32位分成了3部分，1位（符号位）8位（指数位）23位（有效数字）那么 1+ 8 + 23 等于32吧，所以float的32位是这么来的。23位有效数字就表示float真正能存的精度，23位小数部分是反被储存的部分，所以它是有24位存储的，2^24（2的24次方）=16777216 ，请大家记住这个数值，下面我们在做个试验",
'artical102':"如果有人不知道 取值范围 -3.402823E+38-3.402823E+38 其中的E+38的含义我这里解释一下-3.402823E+38 等价于 -3.402823*10^38（10的38次方）取值范围-3.402823E+38 – 3.402823E+38 也就等价于-340282300000000000000000000000000000000 至 340282300000000000000000000000000000000看到这里大家应该心里有点明白了吧？float的最大值340282300000000000000000000000000000000完全秒杀int的最大值4294967295在回到文章开头的代码，float占4字节int也占4字节 ，此刻你的内心是否有个疑问？为什么差这么多？首先咱先看看int 4字节 （1个字节8位，4字节就是32位）也就表示它由32位保存 也就是它的最大值是 2^32（2的32次方）=4294967296（大家可以拿起计算器算一下是不是这个值）同样的float 4字节 也表示它由32位保存那么凭什么它能存3.402823E+38这么大的数呢？机器不会骗人，原因就是它不是按int这么存数据的。比如一个float 数据1024.1024 等价于 1.0241024 * 10^3  （3表示指数，1.0241024表示有效数字）float其实只是把符号、指数、有效数字3部分保存，真正在运算的时候是根据指数在移位操作。float把 32位分成了3部分，1位（符号位）8位（指数位）23位（有效数字）那么 1+ 8 + 23 等于32吧，所以float的32位是这么来的。23位有效数字就表示float真正能存的精度，23位小数部分是反被储存的部分，所以它是有24位存储的，2^24（2的24次方）=16777216 ，请大家记住这个数值，下面我们在做个试验",
'artical103':"如果有人不知道 取值范围 -3.402823E+38-3.402823E+38 其中的E+38的含义我这里解释一下-3.402823E+38 等价于 -3.402823*10^38（10的38次方）取值范围-3.402823E+38 – 3.402823E+38 也就等价于-340282300000000000000000000000000000000 至 340282300000000000000000000000000000000看到这里大家应该心里有点明白了吧？float的最大值340282300000000000000000000000000000000完全秒杀int的最大值4294967295在回到文章开头的代码，float占4字节int也占4字节 ，此刻你的内心是否有个疑问？为什么差这么多？首先咱先看看int 4字节 （1个字节8位，4字节就是32位）也就表示它由32位保存 也就是它的最大值是 2^32（2的32次方）=4294967296（大家可以拿起计算器算一下是不是这个值）同样的float 4字节 也表示它由32位保存那么凭什么它能存3.402823E+38这么大的数呢？机器不会骗人，原因就是它不是按int这么存数据的。比如一个float 数据1024.1024 等价于 1.0241024 * 10^3  （3表示指数，1.0241024表示有效数字）float其实只是把符号、指数、有效数字3部分保存，真正在运算的时候是根据指数在移位操作。float把 32位分成了3部分，1位（符号位）8位（指数位）23位（有效数字）那么 1+ 8 + 23 等于32吧，所以float的32位是这么来的。23位有效数字就表示float真正能存的精度，23位小数部分是反被储存的部分，所以它是有24位存储的，2^24（2的24次方）=16777216 ，请大家记住这个数值，下面我们在做个试验",
'artical104':"如果有人不知道 取值范围 -3.402823E+38-3.402823E+38 其中的E+38的含义我这里解释一下-3.402823E+38 等价于 -3.402823*10^38（10的38次方）取值范围-3.402823E+38 – 3.402823E+38 也就等价于-340282300000000000000000000000000000000 至 340282300000000000000000000000000000000看到这里大家应该心里有点明白了吧？float的最大值340282300000000000000000000000000000000完全秒杀int的最大值4294967295在回到文章开头的代码，float占4字节int也占4字节 ，此刻你的内心是否有个疑问？为什么差这么多？首先咱先看看int 4字节 （1个字节8位，4字节就是32位）也就表示它由32位保存 也就是它的最大值是 2^32（2的32次方）=4294967296（大家可以拿起计算器算一下是不是这个值）同样的float 4字节 也表示它由32位保存那么凭什么它能存3.402823E+38这么大的数呢？机器不会骗人，原因就是它不是按int这么存数据的。比如一个float 数据1024.1024 等价于 1.0241024 * 10^3  （3表示指数，1.0241024表示有效数字）float其实只是把符号、指数、有效数字3部分保存，真正在运算的时候是根据指数在移位操作。float把 32位分成了3部分，1位（符号位）8位（指数位）23位（有效数字）那么 1+ 8 + 23 等于32吧，所以float的32位是这么来的。23位有效数字就表示float真正能存的精度，23位小数部分是反被储存的部分，所以它是有24位存储的，2^24（2的24次方）=16777216 ，请大家记住这个数值，下面我们在做个试验"
             
                   };

export default ArticalConfig;
